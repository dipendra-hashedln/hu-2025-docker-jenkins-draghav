properties([
    parameters([
        credentials(
            name: 'DOCKER_CREDS',
            credentialType: 'usernamePassword',
            defaultValue: 'docker-hub-credentials'
        ),
        credentials(
            name: 'TEAMS_WEBHOOK',
            credentialType: 'string',
            defaultValue: 'teams-webhook-url'
        )
    ])
])

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    docker.build("amanrgv/hu-2025-docker-jenkins-draghav:latest")
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', params.DOCKER_CREDS) {
                        docker.image("amanrgv/hu-2025-docker-jenkins-draghav:latest").push()
                    }
                    build job: 'hu-2025-deploy-pipeline', wait: false
                }
            }
        }
    }

    post {
        always {
            script {
                // Determine Event and Actor
                def cause = currentBuild.getBuildCauses()[0]
                def event
                def actor

                if (cause.shortDescription.contains('Started by user')) {
                    event = 'User-initiated'
                    actor = cause.userId ?: 'Unknown User'
                } else if (cause.shortDescription.contains('Started by timer')) {
                    event = 'Cron-triggered'
                    actor = 'Cron'
                } else if (cause.shortDescription.contains('Started by an SCM change')) {
                    event = 'SCM-triggered'
                    actor = 'SCM'
                } else {
                    event = 'Unknown'
                    actor = 'Unknown'
                }

                def color = currentBuild.currentResult == 'SUCCESS' ? '00FF00' : 'FF0000'

                // Define the JSON payload for Teams notification
                def payload = """
                {
                    "@type": "MessageCard",
                    "summary": "Build ${currentBuild.currentResult}",
                    "themeColor": "${color}",
                    "sections": [{
                        "activityTitle": "Pipeline Notification",
                        "facts": [
                            {"name": "Status", "value": "${currentBuild.currentResult}"},
                            {"name": "Build ID", "value": "${env.BUILD_NUMBER}"},
                            {"name": "Event", "value": "${event}"},
                            {"name": "Actor", "value": "${actor}"}
                        ]
                    }]
                }
                """.stripIndent()

                // Write the payload to a file
                writeFile file: 'teams_payload.json', text: payload

                // Use withCredentials to securely handle the webhook URL
                withCredentials([string(credentialsId: params.TEAMS_WEBHOOK, variable: 'WEBHOOK_URL')]) {
                    sh """
                        curl -X POST -H 'Content-Type: application/json' --data-binary @teams_payload.json '${WEBHOOK_URL}'
                    """
                }
            }
        }
    }
}